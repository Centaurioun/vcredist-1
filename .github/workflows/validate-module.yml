name: validate-module

on:  
  push:
    branches:
      - '*'
    paths:
      - 'VcRedist/**'
      - 'tests/**'
      - '.github/workflows/validate-module.yml'
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - '*'
    paths:
      - 'VcRedist/**'
      - 'tests/**'
  workflow_dispatch:

jobs:
  run-pester:
    name: run-pester
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, windows-2022]

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Import GPG key so that we can sign the commit
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPGKEY }}
          passphrase: ${{ secrets.GPGPASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          git_committer_name: ${{ secrets.COMMIT_NAME }}
          git_committer_email: ${{ secrets.COMMIT_EMAIL }}

      - name: Install and cache PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4.5
        with:
          modules-to-cache: Pester
          shell: powershell

      # Run Pester tests
      - name: Run Pester tests
        shell: powershell
        run: |
          Import-Module "${{ github.workspace }}\VcRedist" -Force
          Import-Module -Name "Pester" -Force
          $Config = [PesterConfiguration]::Default
          $Config.Run.Path = "${{ github.workspace }}\tests"
          $Config.Run.PassThru = $True
          $Config.CodeCoverage.Enabled = $True
          $Config.CodeCoverage.OutputPath = "${{ github.workspace }}\tests\CodeCoverage-${{ matrix.os }}.xml"
          $Config.TestResult.Enabled = $True
          $Config.TestResult.OutputFormat = "NUnitXml"
          $Config.TestResult.OutputPath = "${{ github.workspace }}\tests\TestResults-${{ matrix.os }}.xml"
          Invoke-Pester -Configuration $Config

      - name: Upload artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pester-test-results
          path: |
            ${{ github.workspace }}\tests\*.xml

      - name: Upload to Codecov
        id: codecov
        shell: powershell
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -OutFile "${{ github.workspace }}\codecov.exe"
          .\codecov.exe -t ${CODECOV_TOKEN} --gcovInclude "${{ github.workspace }}\tests"

      # Format the date number for the commit message
      - name: Get date
        id: get-date
        shell: powershell
        run: |
          echo "::set-output name=date::$(Get-Date -Format "yyyy-MM-dd")"

      - name: git pull
        id: git-pull
        shell: powershell
        run: |
          git pull origin

      - name: Commit changes
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "validate-module ${{ steps.get-date.outputs.date }}.${{ github.run_number }}"
          commit_user_name: ${{ secrets.COMMIT_NAME }}
          commit_user_email: ${{ secrets.COMMIT_EMAIL }}

      - name: "Run if changes have been detected"
        if: steps.commit.outputs.changes_detected == 'true'
        run: echo "Changes committed."

      - name: "Run if no changes have been detected"
        if: steps.commit.outputs.changes_detected == 'false'
        run: echo "No changes detected."

  analyse-powershell:
    name: run-psscriptanalyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.0
        with:
          path: ./VcRedist
          recurse: true 
          output: results.sarif
      
      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
